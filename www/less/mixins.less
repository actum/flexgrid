.make-row(@gutter: @grid-gutter-width) {
  margin-left:  (@gutter / -2);
  margin-right: (@gutter / -2);
}

.calc-grid(@index, @class, @type) when (@type = width) and (@index > 0) {
  .col-@{class}-@{index} {
    width: percentage((@index / @grid-columns));
  }
}

.calc-grid(@index, @class, @type) when (@type = offset) {
  .col-@{class}-offset-@{index} {
    margin-left: percentage((@index / @grid-columns));
  }
}

.make-grid(@index, @class, @type) when (@index >= 0) {
  .calc-grid(@index, @class, @type);
  // next iteration
  .make-grid(@index - 1, @class, @type);
}

.make-grid-columns() {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) when (@index = 1) { // initial
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";
    .col(@index + 1, @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";
    .col(@index + 1, ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
		box-sizing: border-box;
		display: -webkit-box;
		display: -webkit-flex;
		display: -ms-flexbox;
		display: flex;
		// Inner gutter via padding
		padding-left:  (@grid-gutter-width / 2);
		padding-right: (@grid-gutter-width / 2);
    }
  }
  .col(1); // kickstart it
}

.make-help-class(@class) {
	.start-@{class} {
	  justify-content: flex-start;
	  text-align: start;
	}

	.center-@{class} {
	  justify-content: center;
	  text-align: center;
	}

	.end-@{class} {
	  justify-content: flex-end;
	  text-align: end;
	}

	.top-@{class} {
	  align-items: flex-start;
	}

	.middle-@{class} {
	  align-items: center;
	}

	.bottom-@{class} {
	  align-items: flex-end;
	}

	.around-@{class} {
	  justify-content: space-around;
	}

	.between-@{class} {
	  justify-content: space-between;
	}

	.first-@{class} {
	  order: -1;
	}

	.last-@{class} {
	  order: 1;
	}
}